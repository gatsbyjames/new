[{"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/index.js":"1","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/App.js":"2","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reportWebVitals.js":"3","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Footer.js":"4","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Header.js":"5","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/HomeScreen.js":"6","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Product.js":"7","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/products.js":"8","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Rating.js":"9","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProductScreen.js":"10","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/store.js":"11","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/productReducers.js":"12","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/productConstants.js":"13","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/productActions.js":"14","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Loader.js":"15","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Message.js":"16","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/CartScreen.js":"17","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/cartReducers.js":"18","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/cartConstants.js":"19","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/cartActions.js":"20","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/userReducers.js":"21","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/userConstants.js":"22","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/LoginScreen.js":"23","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/FormContainer.js":"24","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/userActions.js":"25","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/RegisterScreen.js":"26","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProfileScreen.js":"27","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ShippingScreen.js":"28","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/PaymentScreen.js":"29","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/CheckoutSteps.js":"30","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/PlaceOrderScreen.js":"31","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/orderReducers.js":"32","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/orderConstants.js":"33","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/orderActions.js":"34","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/OrderScreen.js":"35"},{"size":633,"mtime":1653867776728,"results":"36","hashOfConfig":"37"},{"size":1812,"mtime":1654496758220,"results":"38","hashOfConfig":"37"},{"size":362,"mtime":1653778558237,"results":"39","hashOfConfig":"37"},{"size":316,"mtime":1653779478005,"results":"40","hashOfConfig":"37"},{"size":2024,"mtime":1654111061141,"results":"41","hashOfConfig":"37"},{"size":1471,"mtime":1654110373150,"results":"42","hashOfConfig":"37"},{"size":920,"mtime":1653792809424,"results":"43","hashOfConfig":"37"},{"size":2770,"mtime":1653782725379,"results":"44","hashOfConfig":"37"},{"size":1704,"mtime":1653792114141,"results":"45","hashOfConfig":"37"},{"size":4221,"mtime":1654418077395,"results":"46","hashOfConfig":"37"},{"size":1575,"mtime":1654424307561,"results":"47","hashOfConfig":"37"},{"size":1177,"mtime":1653923023101,"results":"48","hashOfConfig":"37"},{"size":361,"mtime":1653889443934,"results":"49","hashOfConfig":"37"},{"size":1324,"mtime":1653923860913,"results":"50","hashOfConfig":"37"},{"size":481,"mtime":1653884916285,"results":"51","hashOfConfig":"37"},{"size":209,"mtime":1653935628364,"results":"52","hashOfConfig":"37"},{"size":4086,"mtime":1654244250362,"results":"53","hashOfConfig":"37"},{"size":1301,"mtime":1654421612297,"results":"54","hashOfConfig":"37"},{"size":293,"mtime":1654421279082,"results":"55","hashOfConfig":"37"},{"size":1387,"mtime":1654419199841,"results":"56","hashOfConfig":"37"},{"size":2149,"mtime":1654238023454,"results":"57","hashOfConfig":"37"},{"size":903,"mtime":1654237929304,"results":"58","hashOfConfig":"37"},{"size":2562,"mtime":1654309302658,"results":"59","hashOfConfig":"37"},{"size":344,"mtime":1654059854621,"results":"60","hashOfConfig":"37"},{"size":4065,"mtime":1654495774170,"results":"61","hashOfConfig":"37"},{"size":3365,"mtime":1654222881326,"results":"62","hashOfConfig":"37"},{"size":3766,"mtime":1654236768663,"results":"63","hashOfConfig":"37"},{"size":2672,"mtime":1654255644037,"results":"64","hashOfConfig":"37"},{"size":1509,"mtime":1654256296431,"results":"65","hashOfConfig":"37"},{"size":1238,"mtime":1654255608564,"results":"66","hashOfConfig":"37"},{"size":5065,"mtime":1654501026398,"results":"67","hashOfConfig":"37"},{"size":1137,"mtime":1654500719759,"results":"68","hashOfConfig":"37"},{"size":412,"mtime":1654425129739,"results":"69","hashOfConfig":"37"},{"size":1831,"mtime":1654499542181,"results":"70","hashOfConfig":"37"},{"size":4539,"mtime":1654500170758,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"e03a3o",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"75"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"75"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"107"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"75"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"75"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"75"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"75"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"75"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"182"},"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/index.js",[],[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/App.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reportWebVitals.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Footer.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Header.js",["193","194","195","196"],[],"import React, { useEffect } from \"react\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n} from \"../constants/userConstants\";\n\nfunction Header() {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      const { userInfo } = userLogin;\n    }\n  }, []);\n\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>ProShop</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link href=\"#cart\">\n                  <i className=\"fas fa-shopping-cart\"></i>Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link href=\"#login\">\n                    <i className=\"fas fa-user\"></i>Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/HomeScreen.js",["197"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport { listProducts } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nfunction HomeScreen() {\n  // const [products, setProducts] = useState([]);\n\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { error, loading, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n\n    // async function fetchProduct() {\n    //   const { data } = await axios.get('/api/products/')\n    //   setProducts(data)\n    // }\n\n    // //////////\n    // // then 대신에 const { data } 이렇게 해버리면 된다\n    // // http:127.0.0.1:8000 지우고 package.json 에 proxy 설정해주면됨\n    // // 서버 껏다 다시 켜줘야됨\n    // //////////\n\n    // fetchProduct()\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Latest Product</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default HomeScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Product.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/products.js",[],[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Rating.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProductScreen.js",["198","199"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Button,\n  Card,\n  Form,\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductDetails } from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\n\nfunction ProductScreen() {\n  const [qty, setQty] = useState(1);\n\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  // const [product, setProduct] = useState([]);\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  const addToCartHandler = () => {\n    navigate(`/cart/${id}?qty=${qty}`);\n    // 얘가 cart 앞에 / 를 안 붙이면 그 경로에서 navigate 경로로 이동하고\n    // cart 앞에 / 를 붙이면 경로가 초기화되서 navigate 경로로 이동한다\n  };\n\n  useEffect(() => {\n    // async function fetchProduct() {\n    //     const { data } = await axios.get(`/api/products/${id}`)\n    //     setProduct(data)\n    // }\n\n    // fetchProduct()\n    dispatch(listProductDetails(id));\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light\">\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} />\n          </Col>\n\n          <Col>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                  color={\"#f8e825\"}\n                />\n              </ListGroup.Item>\n\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n\n              <ListGroup.Item>\n                Description: ${product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Prices:</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? \"In stock\" : \"Out of Stock\"}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col xs=\"auto\" className=\"my-1\">\n                        <Form.Control\n                          as=\"select\"\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                        {/* 얘가 수량 설정 코드 Form */}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className=\"btn-block\"\n                    disabled={product.countInStock == 0}\n                    type=\"button\"\n                  >\n                    Add to Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </div>\n  );\n}\n\nexport default ProductScreen;\n",[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/store.js",["200","201","202","203"],[],"import { combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducers\";\nimport {\n  userLoginReducer,\n  userDetailesReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n} from \"./reducers/userReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n} from \"./reducers/orderReducers\";\n\nconst cartItemFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\n// our data come from state\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nexport default configureStore({\n  reducer: {\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailesReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n  },\n  initialState,\n});\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/productReducers.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/productConstants.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/productActions.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Loader.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/Message.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/CartScreen.js",["204"],[],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams, useLocation, Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nfunction CartScreen() {\n  const { id } = useParams();\n  // id 는 오로직 한개\n  const { search } = useLocation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const qty = search ? Number(search.split(\"=\")[1]) : 1;\n\n  // location 은 필수\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  // console.log('cartItems', cartItems)\n  // console.log('hi')\n  // console.log(cart)\n  // console.log(cartItems)\n\n  useEffect(() => {\n    if (id) {\n      dispatch(addToCart(id, qty));\n    }\n    // console.log(\"cart is added\")\n    //원래는 빈 어레이 인데 useEffect 가 마운트 되고 난 다음에 카트가 추가됨\n  }, [dispatch, id, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHanlder = () => {\n    navigate(\"/login?redirect=/shipping\");\n    // ㅈㄴ 간단하네 씨빨!!!! shipping 앞에 / 만 붙이니까 login 띠 버리고 바로 shipping 으로 이동함\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message variant=\"info\">\n            Your cart is empty <Link to=\"/\">go back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                    {/* fluid 글씨 작아짐, rounded 잘 모르겠음 */}\n                  </Col>\n\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n\n                  <Col md={2}>${item.price}</Col>\n\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(addToCart(item.product, e.value.target))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                        //배열이 0부터 시작해서 x + 1 임\n                      ))}\n                    </Form.Control>\n                  </Col>\n\n                  <Col>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                      //item.product 집어 넣어야 작동하네\n                    >\n                      <i className=\"fas- fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <h2>\n              Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n              items\n            </h2>\n            $\n            {cartItems\n              .reduce((acc, item) => acc + item.qty * item.price, 0)\n              .toFixed(2)}\n          </ListGroup>\n\n          <ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHanlder}\n            >\n              Process To Checkout\n            </Button>\n          </ListGroup.Item>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n\nexport default CartScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/cartReducers.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/cartConstants.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/cartActions.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/userReducers.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/userConstants.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/LoginScreen.js",["205"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { login } from \"../actions/userActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nfunction LoginScreen() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //Warning: A component is changing an uncontrolled input to be controlled. This is likely caused\n  // useState 에 '' 안 넣으니까 이 뜸\n\n  // 500 erro 는 / 를 안넣어서, 401 error 는 django signal 때문에\n\n  const { search } = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\n  // 로그인 성공 시 홈으로 보내주는 코드\n\n  const userLogin = useSelector((state) => state.userLogin);\n  // useSelector 이새끼가 ㅋㅋ store.js 에서 reducer 가져오는 새끼임\n  const { loading, error, userInfo } = userLogin;\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          New Customer?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default LoginScreen;\n",[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/FormContainer.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/userActions.js",["206","207","208","209"],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/RegisterScreen.js",["210","211"],[],"import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate, Link } from \"react-router-dom\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nfunction RegisterScreen() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const { search } = useLocation();\n  const navigate = useNavigate();\n\n  const redirect = search ? search.split(\"=\")[1] : \"/\";\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect);\n    }\n  }, [userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Password does not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            // conrol 이라고 쓰니까 element type is invalid 라고뜸\n            required\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name || \"\"}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email || \"\"}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password || \"\"}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConfirm\">\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword || \"\"}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{\" \"}\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\n            Log in\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n}\n\nexport default RegisterScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProfileScreen.js",["212","213","214","215"],[],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { updateUserProfile, getUserDetails } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nfunction ProfileScreen() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  // 진심 success 이세기 뭔지 잘 모르겟음\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, userInfo, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      setMessage(\"Password does not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={9}>\n        <h2>My orders</h2>\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ShippingScreen.js",["216","217","218"],[],"import React, { useState, useEffect } from \"react\";\nimport { Col, Row, Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FormContainer from \"../components/FormContainer\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport { useNavigate } from \"react-router-dom\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\nfunction ShippingScreen() {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\n    navigate(\"/payment\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"address\">\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter address\"\n            value={address ? address : \"\"}\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"city\">\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter city\"\n            value={city ? city : \"\"}\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter postal code\"\n            value={postalCode ? postalCode : \"\"}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"country\">\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter country\"\n            value={country ? country : \"\"}\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default ShippingScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/PaymentScreen.js",["219"],[],"import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport FormContainer from \"../components/FormContainer\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen() {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [paymentMethod, setPaymentMethod] = useState(\"Paypal\");\n\n  if (!shippingAddress) {\n    navigate(\"/shipping\");\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    navigate(\"/placeorder\");\n  };\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n","/Users/gatsby/Downloads/projects/ecommerce/frontend/src/components/CheckoutSteps.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/PlaceOrderScreen.js",["220","221","222"],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/orderReducers.js",[],[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/constants/orderConstants.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/orderActions.js",[],[],"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/OrderScreen.js",["223","224","225","226","227"],[],"import React, { useState, useEffect } from \"react\";\nimport {\n  Image,\n  Col,\n  Row,\n  Form,\n  Button,\n  Card,\n  ListGroup,\n} from \"react-bootstrap\";\nimport { useNavigate, Link, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getOrderDetails } from \"../actions/orderActions\";\n\nfunction OrderScreen() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n\n  useEffect(() => {\n    if (!order || order._id !== Number(id)) {\n      dispatch(getOrderDetails(id));\n    }\n  }, [order, id]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h1>Order: {order._id} </h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>Name: {order.user.name}</p>\n              <p>\n                Email:{\" \"}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                Shipping:\n                {order.shippingAddress.address}, {order.shippingAddress.city}\n                {\"  \"}\n                {order.shippingAddress.postalCode}\n                {\"  \"}\n                {order.shippingAddress.country}\n              </p>\n\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  Delivered on {order.DeliveredAt}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>Method: {order.paymentMethod}</p>\n              {order.isPaid ? (\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\"> Order is empty</Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`'/product/${item}`}>{item.name}</Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} X ${(item.qty * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default OrderScreen;\n",{"ruleId":"228","severity":1,"message":"229","line":7,"column":3,"nodeType":"230","messageId":"231","endLine":7,"endColumn":21},{"ruleId":"228","severity":1,"message":"232","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"228","severity":1,"message":"233","line":23,"column":15,"nodeType":"230","messageId":"231","endLine":23,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":25,"column":6,"nodeType":"236","endLine":25,"endColumn":8,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"239","line":43,"column":6,"nodeType":"236","endLine":43,"endColumn":16,"suggestions":"240"},{"ruleId":"241","severity":1,"message":"242","line":126,"column":52,"nodeType":"243","messageId":"244","endLine":126,"endColumn":54},{"ruleId":"228","severity":1,"message":"245","line":1,"column":10,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"246","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":42},{"ruleId":"228","severity":1,"message":"247","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"248","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":29},{"ruleId":"228","severity":1,"message":"238","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"249","line":33,"column":6,"nodeType":"236","endLine":33,"endColumn":26,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"251","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":24},{"ruleId":"228","severity":1,"message":"252","line":8,"column":3,"nodeType":"230","messageId":"231","endLine":8,"endColumn":21},{"ruleId":"228","severity":1,"message":"253","line":15,"column":3,"nodeType":"230","messageId":"231","endLine":15,"endColumn":28},{"ruleId":"228","severity":1,"message":"254","line":19,"column":10,"nodeType":"230","messageId":"231","endLine":19,"endColumn":16},{"ruleId":"234","severity":1,"message":"249","line":30,"column":6,"nodeType":"236","endLine":30,"endColumn":26,"suggestions":"255"},{"ruleId":"241","severity":1,"message":"256","line":35,"column":18,"nodeType":"243","messageId":"244","endLine":35,"endColumn":20},{"ruleId":"228","severity":1,"message":"257","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":14},{"ruleId":"228","severity":1,"message":"258","line":4,"column":16,"nodeType":"230","messageId":"231","endLine":4,"endColumn":27},{"ruleId":"234","severity":1,"message":"259","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":32,"suggestions":"260"},{"ruleId":"241","severity":1,"message":"256","line":47,"column":18,"nodeType":"243","messageId":"244","endLine":47,"endColumn":20},{"ruleId":"228","severity":1,"message":"261","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"262","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":13},{"ruleId":"228","severity":1,"message":"263","line":2,"column":15,"nodeType":"230","messageId":"231","endLine":2,"endColumn":18},{"ruleId":"228","severity":1,"message":"261","line":1,"column":27,"nodeType":"230","messageId":"231","endLine":1,"endColumn":36},{"ruleId":"228","severity":1,"message":"238","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"264","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":7},{"ruleId":"234","severity":1,"message":"265","line":51,"column":6,"nodeType":"236","endLine":51,"endColumn":15,"suggestions":"266"},{"ruleId":"228","severity":1,"message":"238","line":1,"column":17,"nodeType":"230","messageId":"231","endLine":1,"endColumn":25},{"ruleId":"228","severity":1,"message":"264","line":6,"column":3,"nodeType":"230","messageId":"231","endLine":6,"endColumn":7},{"ruleId":"228","severity":1,"message":"267","line":7,"column":3,"nodeType":"230","messageId":"231","endLine":7,"endColumn":9},{"ruleId":"228","severity":1,"message":"268","line":11,"column":10,"nodeType":"230","messageId":"231","endLine":11,"endColumn":21},{"ruleId":"234","severity":1,"message":"269","line":34,"column":6,"nodeType":"236","endLine":34,"endColumn":17,"suggestions":"270"},"no-unused-vars","'USER_LOGIN_REQUEST' is defined but never used.","Identifier","unusedVar","'USER_LOGIN_SUCCESS' is defined but never used.","'userInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'userInfo' and 'userLogin'. Either include them or remove the dependency array.","ArrayExpression",["271"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["272"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'combineReducers' is defined but never used.","'applyMiddleware' is defined but never used.","'thunk' is defined but never used.","'composeWithDevTools' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["273"],"'USER_REGISTER_REQUEST' is defined but never used.","'USER_REGISTER_FAIL' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'Action' is defined but never used.",["274"],"Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'success'. Either include them or remove the dependency array.",["275"],"'useEffect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order._id'. Either include them or remove the dependency array.",["276"],"'Button' is defined but never used.","'useNavigate' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["277"],{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [userInfo, userLogin]",{"range":"291","text":"292"},"Update the dependencies array to be: [dispatch, id]",{"range":"293","text":"294"},"Update the dependencies array to be: [userInfo, redirect, navigate]",{"range":"295","text":"296"},{"range":"297","text":"296"},"Update the dependencies array to be: [dispatch, userInfo, user, navigate, success]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch, navigate, order._id, success]",{"range":"300","text":"301"},"Update the dependencies array to be: [order, id, dispatch]",{"range":"302","text":"303"},[668,670],"[userInfo, userLogin]",[1219,1229],"[dispatch, id]",[1160,1180],"[userInfo, redirect, navigate]",[1057,1077],[1480,1506],"[dispatch, userInfo, user, navigate, success]",[1378,1387],"[dispatch, navigate, order._id, success]",[893,904],"[order, id, dispatch]"]