{"ast":null,"code":"import { combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { userLoginReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : 2; // our data come from state\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nexport default configureStore({\n  reducer: {\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer\n  },\n  initialState\n});","map":{"version":3,"names":["combineReducers","applyMiddleware","thunk","configureStore","composeWithDevTools","productListReducer","productDetailsReducer","userLoginReducer","cartReducer","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cart","cartItems","userLogin","userInfo","reducer","productList","productDetails"],"sources":["/Users/gatsby/Downloads/projects/ecommerce/frontend/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { configureStore } from '@reduxjs/toolkit'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { userLoginReducer } from './reducers/userReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\n\nconst cartItemFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \n    JSON.parse(localStorage.getItem('userInfo')) : 2\n    \n    // our data come from state\n\n\n\n\nconst initialState = {\n    cart: { cartItems: cartItemFromStorage },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nexport default configureStore({\n    reducer: {\n        productList: productListReducer,\n        productDetails: productDetailsReducer,\n        cart: cartReducer,\n        userLogin: userLoginReducer,\n    }, initialState\n})"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAGA,MAAMC,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADwB,GACwB,EADpD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,CADnD,C,CAGI;;AAKJ,MAAMI,YAAY,GAAG;EACjBC,IAAI,EAAE;IAAEC,SAAS,EAAER;EAAb,CADW;EAEjBS,SAAS,EAAE;IAAEC,QAAQ,EAAEL;EAAZ;AAFM,CAArB;AAKA,eAAeX,cAAc,CAAC;EAC1BiB,OAAO,EAAE;IACLC,WAAW,EAAEhB,kBADR;IAELiB,cAAc,EAAEhB,qBAFX;IAGLU,IAAI,EAAER,WAHD;IAILU,SAAS,EAAEX;EAJN,CADiB;EAMvBQ;AANuB,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}