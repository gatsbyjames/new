{"ast":null,"code":"var _jsxFileName = \"/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductScreen() {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); // const [product, setProduct] = useState([]);\n\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    // async function fetchProduct() {\n    //     const { data } = await axios.get(`/api/products/${id}`)\n    //     setProduct(data)\n    // }\n    // fetchProduct()\n    dispatch(listProductDetails(id));\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`,\n              color: '#f8e825'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: $\", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Prices:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", product.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? 'In stock' : 'Out of Stock'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"auto\",\n                  className: \"my-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => setQty(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: x + 1,\n                      children: x + 1\n                    }, x + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block\",\n                disabled: product.countInStock == 0,\n                type: \"button\",\n                children: \"add to cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductScreen, \"cE5s7GvbxszG+YhwBQX1098875o=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","Row","Col","Image","ListGroup","Button","Card","Form","Rating","useDispatch","useSelector","listProductDetails","Loader","Message","ProductScreen","qty","setQty","id","dispatch","productDetails","state","loading","error","product","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"sources":["/Users/gatsby/Downloads/projects/ecommerce/frontend/src/screens/ProductScreen.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\nimport { Link,useParams } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\nfunction ProductScreen() {\n    const [qty, setQty] = useState(1);\n    \n    const {id} = useParams();\n    const dispatch = useDispatch();\n    // const [product, setProduct] = useState([]);\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n    useEffect(()=> {\n        // async function fetchProduct() {\n        //     const { data } = await axios.get(`/api/products/${id}`)\n        //     setProduct(data)\n        // }\n\n        // fetchProduct()\n        dispatch(listProductDetails(id))\n\n    },[dispatch])\n\n\n\n\n  return (\n    <div>\n        <Link to='/' className='btn btn-light'>Go Back</Link>\n        { loading ? (\n            <Loader /> \n            )   : error ? (\n                <Message variant='danger'>{error}</Message>\n                )   :   (              \n                <Row>\n                    <Col md={6}>\n                        <Image src={product.image} alt={product.name} />\n                    </Col>\n\n                    <Col>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h3>{product.name}</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                Price: ${product.price}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                Description: ${product.description}\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Col>\n\n                    <Col md={3}>\n                        <Card>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Prices:</Col>\n                                        <Col>\n                                        ${product.price}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Status:</Col>\n                                        <Col>\n                                        {product.countInStock > 0 ? 'In stock' : 'Out of Stock'}\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n\n                                {product.countInStock > 0 && (\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Qty</Col>\n                                            <Col xs='auto' className='my-1'>\n                                                <Form.Control\n                                                    as=\"select\"\n                                                    value={qty}\n                                                    onChange={(e) => setQty(e.target.value)}\n                                                >\n                                                    {\n                                                        [...Array(product.countInStock).keys()].map((x) => (\n                                                            <option key={x + 1} value={x + 1}>\n                                                                {x + 1}\n                                                            </option>\n                                                        ))\n                                                    }\n\n                                                </Form.Control>\n                                                {/* 얘가 수량 설정 코드 Form */}\n\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    \n                                )}\n\n                                <ListGroup.Item>\n                                    <Button className='btn-block' disabled={product.countInStock == 0} type='button'>add to cart</Button>\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <Button>\n                                        Add to Cart\n                                    </Button>\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Card>\n\n                    </Col>\n                </Row>  \n        )}\n    </div>\n  )\n}\n\nexport default ProductScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}