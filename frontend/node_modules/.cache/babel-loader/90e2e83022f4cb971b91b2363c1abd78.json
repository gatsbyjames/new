{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(getState(data))); // set the data in state and local storage\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.meesage\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","axios","login","email","password","dispatch","getState","type","config","headers","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","response","detail","meesage"],"sources":["/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n } from '../constants/userConstants'\n import axios from 'axios'\n\n\nexport const login = (email, password) => async(dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password},\n            config\n        )\n\n        console.log(data)\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(getState(data)))\n\n        // set the data in state and local storage\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.meesage,\n        })\n    }\n\n\n\n}"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,QAKQ,4BALR;AAMC,OAAOC,KAAP,MAAkB,OAAlB;AAGD,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EAEnE,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAET;IADD,CAAD,CAAR;IAIA,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAC;QACJ,gBAAgB;MADZ;IADG,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMT,KAAK,CAACU,IAAN,CACnB,mBADmB,EAEnB;MAAE,YAAYR,KAAd;MAAqB,YAAYC;IAAjC,CAFmB,EAGnBI,MAHmB,CAAvB;IAMAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAACR,kBADA;MAELe,OAAO,EAACJ;IAFH,CAAD,CAAR;IAKAK,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeZ,QAAQ,CAACI,IAAD,CAAvB,CAAjC,EAxBA,CA0BA;EAEH,CA5BD,CA4BE,OAAMS,KAAN,EAAa;IACXd,QAAQ,CAAC;MACLE,IAAI,EAAEP,eADD;MAELc,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AAIJ,CAzCM"},"metadata":{},"sourceType":"module"}