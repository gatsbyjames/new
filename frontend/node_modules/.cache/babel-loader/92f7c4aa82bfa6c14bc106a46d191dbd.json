{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT } from '../constants/userConstants';\nimport axios from 'axios';\nexport const Login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('api/users/login', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data)); // set the data in state and local storage\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.meesage\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","axios","Login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","meesage"],"sources":["/Users/gatsby/Downloads/projects/ecommerce/frontend/src/actions/userActions.js"],"sourcesContent":["import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT\n } from '../constants/userConstants'\n import axios from 'axios'\n\n\nexport const Login = (email, password) => async(dispatch) => {\n\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            'api/users/login',\n            { 'username': email, 'password': password},\n            config\n        )\n\n        dispatch({\n            type:USER_LOGIN_SUCCESS,\n            payload:data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        // set the data in state and local storage\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.meesage,\n        })\n    }\n\n\n\n}"],"mappings":"AAAA,SACIA,kBADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAKIC,WALJ,QAMQ,4BANR;AAOC,OAAOC,KAAP,MAAkB,OAAlB;AAGD,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;EAEzD,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAET;IADD,CAAD,CAAR;IAIA,MAAMU,MAAM,GAAG;MACXC,OAAO,EAAC;QACJ,gBAAgB;MADZ;IADG,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMR,KAAK,CAACS,IAAN,CACnB,iBADmB,EAEnB;MAAE,YAAYP,KAAd;MAAqB,YAAYC;IAAjC,CAFmB,EAGnBG,MAHmB,CAAvB;IAMAF,QAAQ,CAAC;MACLC,IAAI,EAACR,kBADA;MAELa,OAAO,EAACF;IAFH,CAAD,CAAR;IAKAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC,EAtBA,CAuBA;EAEH,CAzBD,CAyBE,OAAMO,KAAN,EAAa;IACXX,QAAQ,CAAC;MACLC,IAAI,EAAEP,eADD;MAELY,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AAIJ,CAtCM"},"metadata":{},"sourceType":"module"}