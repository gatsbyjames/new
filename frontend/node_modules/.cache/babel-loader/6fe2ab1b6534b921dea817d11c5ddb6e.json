{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS } from \"../constants/cartConstants\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter","shippingAddress","saveShippingAddress","data","dispatch","localStorage","setItem","JSON","stringify"],"sources":["/Users/gatsby/Downloads/projects/ecommerce/frontend/src/reducers/cartReducers.js"],"sourcesContent":["import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  });\n\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\n"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,0BAHF,QAIO,4BAJP;AAMA,OAAO,MAAMC,WAAW,GAAG,YAAuC;EAAA,IAAtCC,KAAsC,uEAA9B;IAAEC,SAAS,EAAE;EAAb,CAA8B;EAAA,IAAXC,MAAW;;EAChE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,aAAL;MACE,MAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB;MACA,MAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;MAEA,IAAIH,SAAJ,EAAe;QACb,OAAO,EACL,GAAGN,KADE;UAELC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CADhC;QAFN,CAAP;MAMD,CAPD,MAOO;QACL,OAAO,EACL,GAAGR,KADE;UAELC,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;QAFN,CAAP;MAID;;IAEH,KAAKP,gBAAL;MACE,OAAO,EACL,GAAGG,KADE;QAELC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;MAFN,CAAP;;IAKF,KAAKP,0BAAL;MACE,OAAO,EACL,GAAGE,KADE;QAELY,eAAe,EAAEV,MAAM,CAACG;MAFnB,CAAP;;IAKF;MACE,OAAOL,KAAP;EAhCJ;AAkCD,CAnCM;AAqCP,OAAO,MAAMa,mBAAmB,GAAIC,IAAD,IAAWC,QAAD,IAAc;EACzDA,QAAQ,CAAC;IACPZ,IAAI,EAAEL,0BADC;IAEPO,OAAO,EAAES;EAFF,CAAD,CAAR;EAKAE,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAxC;AACD,CAPM"},"metadata":{},"sourceType":"module"}